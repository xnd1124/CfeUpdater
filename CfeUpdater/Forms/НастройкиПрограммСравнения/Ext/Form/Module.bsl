
&НаКлиенте
Процедура ПутьКПрограммеРаботыСТекстомПриИзменении(Элемент)
	ОбновитьПодписиКПрограмме();
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	НастройкиСравнения = Новый Структура;
	НастройкиСравнения.Вставить("ПутьДо" + Объект.ПрограммаПросмотраИзменений, 
		ПутьКПрограмме);
	НастройкиСравнения.Вставить("ПараметрыКоманднойСтроки2Файла" + Объект.ПрограммаПросмотраИзменений,
		ПараметрыКоманднойСтроки2Файла);
	НастройкиСравнения.Вставить("ПараметрыКоманднойСтроки3ФайлаKDiff3" + Объект.ПрограммаПросмотраИзменений,
		ПараметрыКоманднойСтроки3Файла);
	ЭтотОбъект.Закрыть(НастройкиСравнения);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьЗначенияСвойств(Объект, Параметры); 
	ЭтотОбъект.Заголовок = Объект.ПрограммаПросмотраИзменений; 
	ЗаполнитьРеквизитыФормы();
КонецПроцедуры

&НаКлиенте
Процедура СбросНастроекПоУмолчанию(Команда)
	СбросНастроекПоУмолчаниюНаСервере();  
	ОбновитьПодписиКПрограмме();
КонецПроцедуры

&НаСервере
Процедура СбросНастроекПоУмолчаниюНаСервере() 
	Обработка = ЭтотОбъект();
	Обработка.ЗаполнитьНастройкиПоУмолчанию();   
	Объект.ПараметрыКоманднойСтроки2ФайлаKDiff3 = Обработка.ПараметрыКоманднойСтроки2ФайлаKDiff3;
	Объект.ПараметрыКоманднойСтроки2ФайлаP4Merge = Обработка.ПараметрыКоманднойСтроки2ФайлаP4Merge;
	Объект.ПараметрыКоманднойСтроки3ФайлаKDiff3 = Обработка.ПараметрыКоманднойСтроки3ФайлаKDiff3;
	Объект.ПараметрыКоманднойСтроки3ФайлаP4Merge = Обработка.ПараметрыКоманднойСтроки3ФайлаP4Merge;
	ЭтотОбъект.ПараметрыКоманднойСтроки2Файла = Объект["ПараметрыКоманднойСтроки2Файла" 
		+ Объект.ПрограммаПросмотраИзменений]; 
	ЭтотОбъект.ПараметрыКоманднойСтроки3Файла = Объект["ПараметрыКоманднойСтроки3Файла"
		+ Объект.ПрограммаПросмотраИзменений]; 
КонецПроцедуры    

&НаСервере
Процедура ЗаполнитьРеквизитыФормы()
	ЭтотОбъект.ПутьКПрограмме = Объект["ПутьДо" + Объект.ПрограммаПросмотраИзменений];  
	ЭтотОбъект.ПараметрыКоманднойСтроки2Файла = Объект["ПараметрыКоманднойСтроки2Файла"
		+ Объект.ПрограммаПросмотраИзменений]; 
	ЭтотОбъект.ПараметрыКоманднойСтроки3Файла = Объект["ПараметрыКоманднойСтроки3Файла" 
		+ Объект.ПрограммаПросмотраИзменений]; 
КонецПроцедуры

Функция ЭтотОбъект()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции

&НаКлиенте
Процедура ПутьКПрограммеРаботыСТекстомНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие); 
	ДиалогВыбораФайла.Каталог = КаталогИзПолногоПутиФайла(ПутьКПрограмме);
	Если ОбщегоНазначенияКлиент.ЭтоLinuxКлиент() = Ложь Тогда
		ДиалогВыбораФайла.Фильтр = "Исполняемые файлы| *.exe";
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораФайлаПрограммы", ЭтотОбъект);
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
КонецПроцедуры

Функция КаталогИзПолногоПутиФайла(ПутьКФайлу)
	Если Не ЗначениеЗаполнено(ПутьКФайлу) Тогда
		Возврат ПутьКФайлу; 
	КонецЕсли;
	ЧастиФайла = СтрРазделить(ПутьКфайлу, РазделительНаКлиенте); 
	Если ЧастиФайла.Количество() = 0  Тогда
		Возврат ПутьКФайлу; 	
	КонецЕсли;	
	ИндексПоследнего = ЧастиФайла.ВГраница();
	ЧастиФайла[ИндексПоследнего] = "";
	Возврат СтрСоединить(ЧастиФайла, РазделительНаКлиенте);
КонецФункции

&НаКлиенте
Процедура ПослеВыбораФайлаПрограммы(Результат, ДопПараметры) Экспорт
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	Объект.ПутьКПрограмме = Результат[0];   
	ОбновитьПодписиКПрограмме();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЭтотОбъект.РазделительНаКлиенте = ПолучитьРазделительПути();
	ОбновитьПодписиКПрограмме();
КонецПроцедуры        

&НаКлиенте
Процедура ОбновитьПодписиКПрограмме()
	Если Не ЗначениеЗаполнено(СокрЛП(ПутьКПрограмме)) Тогда  
		ПоказываемыйЭлемент = Элементы.ФайлОтсутсвует;
		НевидимыйЭлемент = Элементы.ФайлНайден;
		ПоказываемыйЭлемент.Заголовок = "Путь не указан";  
	ИначеЕсли ФайлСуществует(ПутьКПрограмме) Тогда
		ПоказываемыйЭлемент = Элементы.ФайлНайден;
		НевидимыйЭлемент = Элементы.ФайлОтсутсвует;
		ПоказываемыйЭлемент.Заголовок = "Файл найден"; 
	Иначе
		ПоказываемыйЭлемент = Элементы.ФайлОтсутсвует;
		НевидимыйЭлемент = Элементы.ФайлНайден;
		ПоказываемыйЭлемент.Заголовок = "Файл не найден"; 
	КонецЕсли;
	
	ПоказываемыйЭлемент.Видимость = Истина;
	НевидимыйЭлемент.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Функция ФайлСуществует(ПолноеИмяФайла)
	Файл = Новый Файл(ПолноеИмяФайла);
	Возврат Файл.Существует();
КонецФункции
